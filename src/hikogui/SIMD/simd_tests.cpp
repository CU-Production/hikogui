// Copyright Take Vos 2020-2022.
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at https://www.boost.org/LICENSE_1_0.txt)

#include "simd_intf.hpp"
#include "../macros.hpp"
#include <catch2/catch_test_macros.hpp>
#include <catch2/matchers/catch_matchers_all.hpp>

using namespace std;
using namespace hi;
using namespace Catch::Matchers;

TEST_CASE("simd", "[simd]")
{

SECTION("arithmatic")
{
    hilet tmp1 = f32x4{9.0f, 6.0f, 4.0f, 14.0f};
    hilet tmp2 = f32x4{3.0f, -2.0f, 8.0f, 7.0f};

    REQUIRE_THAT(tmp1 + tmp2, RangeEquals(f32x4(12.0f, 4.0f, 12.0f, 21.0f)));
    REQUIRE_THAT(tmp1 - tmp2, RangeEquals(f32x4(6.0f, 8.0f, -4.0f, 7.0f)));
    REQUIRE_THAT(tmp1 * tmp2, RangeEquals(f32x4(27.0f, -12.0f, 32.0f, 98.0f)));
    REQUIRE_THAT(tmp1 / tmp2, RangeEquals(f32x4(3.0f, -3.0f, 0.5f, 2.0f)));

    {
        auto tmp = tmp1;
        tmp += tmp2;
        REQUIRE_THAT(tmp, RangeEquals(f32x4(12.0f, 4.0f, 12.0f, 21.0f)));
    }

    {
        auto tmp = tmp1;
        tmp -= tmp2;
        REQUIRE_THAT(tmp, RangeEquals(f32x4(6.0f, 8.0f, -4.0f, 7.0f)));
    }

    {
        auto tmp = tmp1;
        tmp *= tmp2;
        REQUIRE_THAT(tmp, RangeEquals(f32x4(27.0f, -12.0f, 32.0f, 98.0f)));
    }

    {
        auto tmp = tmp1;
        tmp /= tmp2;
        REQUIRE_THAT(tmp, RangeEquals(f32x4(3.0f, -3.0f, 0.5f, 2.0f)));
    }
}

SECTION("hypot")
{
    hilet tmp = f32x4(2.0f, 3.0f, 4.0f, 0.0f);

    REQUIRE_THAT(hypot<0b0111>(tmp).x(), WithinAbs(5.3851f, 0.001f));
}

SECTION("dot product")
{
    hilet a = f32x4(1.0f, 3.0f, -5.0f, 0.0f);
    hilet b = f32x4(4.0f, -2.0f, -1.0f, 0.0f);

    REQUIRE(dot<0b0111>(a, b).x() == 3.0f);
}

SECTION("getters")
{
    hilet tmp = f32x4{2.0f, 3.0f, 4.0f, 5.0f};

    REQUIRE(tmp.x() == 2.0f);
    REQUIRE(tmp.y() == 3.0f);
    REQUIRE(tmp.z() == 4.0f);
    REQUIRE(tmp.w() == 5.0f);
    REQUIRE(tmp.r() == 2.0f);
    REQUIRE(tmp.g() == 3.0f);
    REQUIRE(tmp.b() == 4.0f);
    REQUIRE(tmp.a() == 5.0f);
    REQUIRE(tmp[0] == 2.0f);
    REQUIRE(tmp[1] == 3.0f);
    REQUIRE(tmp[2] == 4.0f);
    REQUIRE(tmp[3] == 5.0f);
}

SECTION("normalize")
{
    auto tmp = f32x4{2.0f, 3.0f, 4.0f, 0.0f};
    auto r = normalize<0b0111>(tmp);
    REQUIRE_THAT(r[0], WithinAbs(0.3713906763541037, 0.001));
    REQUIRE_THAT(r[1], WithinAbs(0.5570860145311556, 0.001));
    REQUIRE_THAT(r[2], WithinAbs(0.7427813527082074, 0.001));
    REQUIRE(r[3] == 0.0);
}

SECTION("setters")
{
    auto tmp = f32x4{2.0f, 3.0f, 4.0f, 5.0f};

    tmp.x() = 12.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(12.0f, 3.0f, 4.0f, 5.0f)));
    tmp.y() = 13.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(12.0f, 13.0f, 4.0f, 5.0f)));
    tmp.z() = 14.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(12.0f, 13.0f, 14.0f, 5.0f)));
    tmp.w() = 15.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(12.0f, 13.0f, 14.0f, 15.0f)));
    tmp.r() = 22.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(22.0f, 13.0f, 14.0f, 15.0f)));
    tmp.g() = 23.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(22.0f, 23.0f, 14.0f, 15.0f)));
    tmp.b() = 24.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(22.0f, 23.0f, 24.0f, 15.0f)));
    tmp.a() = 25.0f;
    REQUIRE_THAT(tmp, RangeEquals(f32x4(22.0f, 23.0f, 24.0f, 25.0f)));
}

SECTION("swizzle2")
{
    hilet tmp = f32x2{2.0f, 3.0f};

    REQUIRE_THAT(tmp.xx(), RangeEquals(f32x2(2.0f, 2.0f)));
    REQUIRE_THAT(tmp.xy(), RangeEquals(f32x2(2.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0(), RangeEquals(f32x2(2.0f, 0.0f)));
    REQUIRE_THAT(tmp.x1(), RangeEquals(f32x2(2.0f, 1.0f)));

    REQUIRE_THAT(tmp.yx(), RangeEquals(f32x2(3.0f, 2.0f)));
    REQUIRE_THAT(tmp.yy(), RangeEquals(f32x2(3.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0(), RangeEquals(f32x2(3.0f, 0.0f)));
    REQUIRE_THAT(tmp.y1(), RangeEquals(f32x2(3.0f, 1.0f)));

    REQUIRE_THAT(tmp._0x(), RangeEquals(f32x2(0.0f, 2.0f)));
    REQUIRE_THAT(tmp._0y(), RangeEquals(f32x2(0.0f, 3.0f)));
    REQUIRE_THAT(tmp._00(), RangeEquals(f32x2(0.0f, 0.0f)));
    REQUIRE_THAT(tmp._01(), RangeEquals(f32x2(0.0f, 1.0f)));

    REQUIRE_THAT(tmp._1x(), RangeEquals(f32x2(1.0f, 2.0f)));
    REQUIRE_THAT(tmp._1y(), RangeEquals(f32x2(1.0f, 3.0f)));
    REQUIRE_THAT(tmp._10(), RangeEquals(f32x2(1.0f, 0.0f)));
    REQUIRE_THAT(tmp._11(), RangeEquals(f32x2(1.0f, 1.0f)));
}

SECTION("swizzle4")
{
    hilet tmp = f32x4{2.0f, 3.0f, 4.0f, 5.0f};

    // Returns a 4D vector.
    REQUIRE_THAT(tmp._0000(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._0001(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._000x(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._000y(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._000z(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._000w(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._0010(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._0011(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._001x(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._001y(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._001z(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._001w(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._00x0(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._00x1(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._00xx(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._00xy(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._00xz(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._00xw(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._00y0(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._00y1(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._00yx(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._00yy(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._00yz(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._00yw(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._00z0(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._00z1(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._00zx(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._00zy(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._00zz(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._00zw(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._00w0(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._00w1(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._00wx(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._00wy(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._00wz(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._00ww(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._0000(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._0001(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._000x(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._000y(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._000z(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._000w(), RangeEquals(f32x4(0.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._0010(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._0011(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._001x(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._001y(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._001z(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._001w(), RangeEquals(f32x4(0.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._00x0(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._00x1(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._00xx(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._00xy(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._00xz(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._00xw(), RangeEquals(f32x4(0.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._00y0(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._00y1(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._00yx(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._00yy(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._00yz(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._00yw(), RangeEquals(f32x4(0.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._00z0(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._00z1(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._00zx(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._00zy(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._00zz(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._00zw(), RangeEquals(f32x4(0.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._00w0(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._00w1(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._00wx(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._00wy(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._00wz(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._00ww(), RangeEquals(f32x4(0.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._0100(), RangeEquals(f32x4(0.0f, 1.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._0101(), RangeEquals(f32x4(0.0f, 1.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._010x(), RangeEquals(f32x4(0.0f, 1.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._010y(), RangeEquals(f32x4(0.0f, 1.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._010z(), RangeEquals(f32x4(0.0f, 1.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._010w(), RangeEquals(f32x4(0.0f, 1.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._0110(), RangeEquals(f32x4(0.0f, 1.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._0111(), RangeEquals(f32x4(0.0f, 1.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._011x(), RangeEquals(f32x4(0.0f, 1.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._011y(), RangeEquals(f32x4(0.0f, 1.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._011z(), RangeEquals(f32x4(0.0f, 1.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._011w(), RangeEquals(f32x4(0.0f, 1.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._01x0(), RangeEquals(f32x4(0.0f, 1.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._01x1(), RangeEquals(f32x4(0.0f, 1.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._01xx(), RangeEquals(f32x4(0.0f, 1.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._01xy(), RangeEquals(f32x4(0.0f, 1.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._01xz(), RangeEquals(f32x4(0.0f, 1.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._01xw(), RangeEquals(f32x4(0.0f, 1.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._01y0(), RangeEquals(f32x4(0.0f, 1.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._01y1(), RangeEquals(f32x4(0.0f, 1.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._01yx(), RangeEquals(f32x4(0.0f, 1.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._01yy(), RangeEquals(f32x4(0.0f, 1.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._01yz(), RangeEquals(f32x4(0.0f, 1.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._01yw(), RangeEquals(f32x4(0.0f, 1.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._01z0(), RangeEquals(f32x4(0.0f, 1.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._01z1(), RangeEquals(f32x4(0.0f, 1.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._01zx(), RangeEquals(f32x4(0.0f, 1.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._01zy(), RangeEquals(f32x4(0.0f, 1.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._01zz(), RangeEquals(f32x4(0.0f, 1.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._01zw(), RangeEquals(f32x4(0.0f, 1.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._01w0(), RangeEquals(f32x4(0.0f, 1.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._01w1(), RangeEquals(f32x4(0.0f, 1.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._01wx(), RangeEquals(f32x4(0.0f, 1.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._01wy(), RangeEquals(f32x4(0.0f, 1.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._01wz(), RangeEquals(f32x4(0.0f, 1.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._01ww(), RangeEquals(f32x4(0.0f, 1.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._0x00(), RangeEquals(f32x4(0.0f, 2.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._0x01(), RangeEquals(f32x4(0.0f, 2.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._0x0x(), RangeEquals(f32x4(0.0f, 2.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._0x0y(), RangeEquals(f32x4(0.0f, 2.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._0x0z(), RangeEquals(f32x4(0.0f, 2.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._0x0w(), RangeEquals(f32x4(0.0f, 2.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._0x10(), RangeEquals(f32x4(0.0f, 2.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._0x11(), RangeEquals(f32x4(0.0f, 2.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._0x1x(), RangeEquals(f32x4(0.0f, 2.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._0x1y(), RangeEquals(f32x4(0.0f, 2.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._0x1z(), RangeEquals(f32x4(0.0f, 2.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._0x1w(), RangeEquals(f32x4(0.0f, 2.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._0xx0(), RangeEquals(f32x4(0.0f, 2.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._0xx1(), RangeEquals(f32x4(0.0f, 2.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._0xxx(), RangeEquals(f32x4(0.0f, 2.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._0xxy(), RangeEquals(f32x4(0.0f, 2.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._0xxz(), RangeEquals(f32x4(0.0f, 2.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._0xxw(), RangeEquals(f32x4(0.0f, 2.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._0xy0(), RangeEquals(f32x4(0.0f, 2.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._0xy1(), RangeEquals(f32x4(0.0f, 2.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._0xyx(), RangeEquals(f32x4(0.0f, 2.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._0xyy(), RangeEquals(f32x4(0.0f, 2.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._0xyz(), RangeEquals(f32x4(0.0f, 2.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._0xyw(), RangeEquals(f32x4(0.0f, 2.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._0xz0(), RangeEquals(f32x4(0.0f, 2.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._0xz1(), RangeEquals(f32x4(0.0f, 2.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._0xzx(), RangeEquals(f32x4(0.0f, 2.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._0xzy(), RangeEquals(f32x4(0.0f, 2.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._0xzz(), RangeEquals(f32x4(0.0f, 2.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._0xzw(), RangeEquals(f32x4(0.0f, 2.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._0xw0(), RangeEquals(f32x4(0.0f, 2.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._0xw1(), RangeEquals(f32x4(0.0f, 2.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._0xwx(), RangeEquals(f32x4(0.0f, 2.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._0xwy(), RangeEquals(f32x4(0.0f, 2.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._0xwz(), RangeEquals(f32x4(0.0f, 2.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._0xww(), RangeEquals(f32x4(0.0f, 2.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._0y00(), RangeEquals(f32x4(0.0f, 3.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._0y01(), RangeEquals(f32x4(0.0f, 3.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._0y0x(), RangeEquals(f32x4(0.0f, 3.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._0y0y(), RangeEquals(f32x4(0.0f, 3.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._0y0z(), RangeEquals(f32x4(0.0f, 3.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._0y0w(), RangeEquals(f32x4(0.0f, 3.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._0y10(), RangeEquals(f32x4(0.0f, 3.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._0y11(), RangeEquals(f32x4(0.0f, 3.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._0y1x(), RangeEquals(f32x4(0.0f, 3.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._0y1y(), RangeEquals(f32x4(0.0f, 3.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._0y1z(), RangeEquals(f32x4(0.0f, 3.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._0y1w(), RangeEquals(f32x4(0.0f, 3.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._0yx0(), RangeEquals(f32x4(0.0f, 3.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._0yx1(), RangeEquals(f32x4(0.0f, 3.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._0yxx(), RangeEquals(f32x4(0.0f, 3.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._0yxy(), RangeEquals(f32x4(0.0f, 3.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._0yxz(), RangeEquals(f32x4(0.0f, 3.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._0yxw(), RangeEquals(f32x4(0.0f, 3.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._0yy0(), RangeEquals(f32x4(0.0f, 3.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._0yy1(), RangeEquals(f32x4(0.0f, 3.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._0yyx(), RangeEquals(f32x4(0.0f, 3.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._0yyy(), RangeEquals(f32x4(0.0f, 3.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._0yyz(), RangeEquals(f32x4(0.0f, 3.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._0yyw(), RangeEquals(f32x4(0.0f, 3.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._0yz0(), RangeEquals(f32x4(0.0f, 3.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._0yz1(), RangeEquals(f32x4(0.0f, 3.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._0yzx(), RangeEquals(f32x4(0.0f, 3.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._0yzy(), RangeEquals(f32x4(0.0f, 3.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._0yzz(), RangeEquals(f32x4(0.0f, 3.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._0yzw(), RangeEquals(f32x4(0.0f, 3.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._0yw0(), RangeEquals(f32x4(0.0f, 3.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._0yw1(), RangeEquals(f32x4(0.0f, 3.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._0ywx(), RangeEquals(f32x4(0.0f, 3.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._0ywy(), RangeEquals(f32x4(0.0f, 3.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._0ywz(), RangeEquals(f32x4(0.0f, 3.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._0yww(), RangeEquals(f32x4(0.0f, 3.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._0z00(), RangeEquals(f32x4(0.0f, 4.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._0z01(), RangeEquals(f32x4(0.0f, 4.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._0z0x(), RangeEquals(f32x4(0.0f, 4.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._0z0y(), RangeEquals(f32x4(0.0f, 4.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._0z0z(), RangeEquals(f32x4(0.0f, 4.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._0z0w(), RangeEquals(f32x4(0.0f, 4.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._0z10(), RangeEquals(f32x4(0.0f, 4.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._0z11(), RangeEquals(f32x4(0.0f, 4.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._0z1x(), RangeEquals(f32x4(0.0f, 4.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._0z1y(), RangeEquals(f32x4(0.0f, 4.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._0z1z(), RangeEquals(f32x4(0.0f, 4.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._0z1w(), RangeEquals(f32x4(0.0f, 4.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._0zx0(), RangeEquals(f32x4(0.0f, 4.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._0zx1(), RangeEquals(f32x4(0.0f, 4.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._0zxx(), RangeEquals(f32x4(0.0f, 4.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._0zxy(), RangeEquals(f32x4(0.0f, 4.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._0zxz(), RangeEquals(f32x4(0.0f, 4.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._0zxw(), RangeEquals(f32x4(0.0f, 4.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._0zy0(), RangeEquals(f32x4(0.0f, 4.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._0zy1(), RangeEquals(f32x4(0.0f, 4.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._0zyx(), RangeEquals(f32x4(0.0f, 4.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._0zyy(), RangeEquals(f32x4(0.0f, 4.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._0zyz(), RangeEquals(f32x4(0.0f, 4.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._0zyw(), RangeEquals(f32x4(0.0f, 4.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._0zz0(), RangeEquals(f32x4(0.0f, 4.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._0zz1(), RangeEquals(f32x4(0.0f, 4.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._0zzx(), RangeEquals(f32x4(0.0f, 4.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._0zzy(), RangeEquals(f32x4(0.0f, 4.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._0zzz(), RangeEquals(f32x4(0.0f, 4.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._0zzw(), RangeEquals(f32x4(0.0f, 4.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._0zw0(), RangeEquals(f32x4(0.0f, 4.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._0zw1(), RangeEquals(f32x4(0.0f, 4.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._0zwx(), RangeEquals(f32x4(0.0f, 4.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._0zwy(), RangeEquals(f32x4(0.0f, 4.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._0zwz(), RangeEquals(f32x4(0.0f, 4.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._0zww(), RangeEquals(f32x4(0.0f, 4.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._0w00(), RangeEquals(f32x4(0.0f, 5.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._0w01(), RangeEquals(f32x4(0.0f, 5.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._0w0x(), RangeEquals(f32x4(0.0f, 5.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._0w0y(), RangeEquals(f32x4(0.0f, 5.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._0w0z(), RangeEquals(f32x4(0.0f, 5.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._0w0w(), RangeEquals(f32x4(0.0f, 5.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._0w10(), RangeEquals(f32x4(0.0f, 5.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._0w11(), RangeEquals(f32x4(0.0f, 5.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._0w1x(), RangeEquals(f32x4(0.0f, 5.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._0w1y(), RangeEquals(f32x4(0.0f, 5.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._0w1z(), RangeEquals(f32x4(0.0f, 5.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._0w1w(), RangeEquals(f32x4(0.0f, 5.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._0wx0(), RangeEquals(f32x4(0.0f, 5.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._0wx1(), RangeEquals(f32x4(0.0f, 5.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._0wxx(), RangeEquals(f32x4(0.0f, 5.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._0wxy(), RangeEquals(f32x4(0.0f, 5.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._0wxz(), RangeEquals(f32x4(0.0f, 5.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._0wxw(), RangeEquals(f32x4(0.0f, 5.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._0wy0(), RangeEquals(f32x4(0.0f, 5.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._0wy1(), RangeEquals(f32x4(0.0f, 5.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._0wyx(), RangeEquals(f32x4(0.0f, 5.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._0wyy(), RangeEquals(f32x4(0.0f, 5.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._0wyz(), RangeEquals(f32x4(0.0f, 5.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._0wyw(), RangeEquals(f32x4(0.0f, 5.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._0wz0(), RangeEquals(f32x4(0.0f, 5.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._0wz1(), RangeEquals(f32x4(0.0f, 5.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._0wzx(), RangeEquals(f32x4(0.0f, 5.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._0wzy(), RangeEquals(f32x4(0.0f, 5.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._0wzz(), RangeEquals(f32x4(0.0f, 5.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._0wzw(), RangeEquals(f32x4(0.0f, 5.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._0ww0(), RangeEquals(f32x4(0.0f, 5.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._0ww1(), RangeEquals(f32x4(0.0f, 5.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._0wwx(), RangeEquals(f32x4(0.0f, 5.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._0wwy(), RangeEquals(f32x4(0.0f, 5.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._0wwz(), RangeEquals(f32x4(0.0f, 5.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._0www(), RangeEquals(f32x4(0.0f, 5.0f, 5.0f, 5.0f)));

    REQUIRE_THAT(tmp._1000(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._1001(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._100x(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._100y(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._100z(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._100w(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._1010(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._1011(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._101x(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._101y(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._101z(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._101w(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._10x0(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._10x1(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._10xx(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._10xy(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._10xz(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._10xw(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._10y0(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._10y1(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._10yx(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._10yy(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._10yz(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._10yw(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._10z0(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._10z1(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._10zx(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._10zy(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._10zz(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._10zw(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._10w0(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._10w1(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._10wx(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._10wy(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._10wz(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._10ww(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._1000(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._1001(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._100x(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._100y(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._100z(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._100w(), RangeEquals(f32x4(1.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._1010(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._1011(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._101x(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._101y(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._101z(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._101w(), RangeEquals(f32x4(1.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._10x0(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._10x1(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._10xx(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._10xy(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._10xz(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._10xw(), RangeEquals(f32x4(1.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._10y0(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._10y1(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._10yx(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._10yy(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._10yz(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._10yw(), RangeEquals(f32x4(1.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._10z0(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._10z1(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._10zx(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._10zy(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._10zz(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._10zw(), RangeEquals(f32x4(1.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._10w0(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._10w1(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._10wx(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._10wy(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._10wz(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._10ww(), RangeEquals(f32x4(1.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._1100(), RangeEquals(f32x4(1.0f, 1.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._1101(), RangeEquals(f32x4(1.0f, 1.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._110x(), RangeEquals(f32x4(1.0f, 1.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._110y(), RangeEquals(f32x4(1.0f, 1.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._110z(), RangeEquals(f32x4(1.0f, 1.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._110w(), RangeEquals(f32x4(1.0f, 1.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._1110(), RangeEquals(f32x4(1.0f, 1.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._1111(), RangeEquals(f32x4(1.0f, 1.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._111x(), RangeEquals(f32x4(1.0f, 1.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._111y(), RangeEquals(f32x4(1.0f, 1.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._111z(), RangeEquals(f32x4(1.0f, 1.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._111w(), RangeEquals(f32x4(1.0f, 1.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._11x0(), RangeEquals(f32x4(1.0f, 1.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._11x1(), RangeEquals(f32x4(1.0f, 1.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._11xx(), RangeEquals(f32x4(1.0f, 1.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._11xy(), RangeEquals(f32x4(1.0f, 1.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._11xz(), RangeEquals(f32x4(1.0f, 1.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._11xw(), RangeEquals(f32x4(1.0f, 1.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._11y0(), RangeEquals(f32x4(1.0f, 1.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._11y1(), RangeEquals(f32x4(1.0f, 1.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._11yx(), RangeEquals(f32x4(1.0f, 1.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._11yy(), RangeEquals(f32x4(1.0f, 1.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._11yz(), RangeEquals(f32x4(1.0f, 1.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._11yw(), RangeEquals(f32x4(1.0f, 1.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._11z0(), RangeEquals(f32x4(1.0f, 1.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._11z1(), RangeEquals(f32x4(1.0f, 1.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._11zx(), RangeEquals(f32x4(1.0f, 1.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._11zy(), RangeEquals(f32x4(1.0f, 1.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._11zz(), RangeEquals(f32x4(1.0f, 1.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._11zw(), RangeEquals(f32x4(1.0f, 1.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._11w0(), RangeEquals(f32x4(1.0f, 1.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._11w1(), RangeEquals(f32x4(1.0f, 1.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._11wx(), RangeEquals(f32x4(1.0f, 1.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._11wy(), RangeEquals(f32x4(1.0f, 1.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._11wz(), RangeEquals(f32x4(1.0f, 1.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._11ww(), RangeEquals(f32x4(1.0f, 1.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._1x00(), RangeEquals(f32x4(1.0f, 2.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._1x01(), RangeEquals(f32x4(1.0f, 2.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._1x0x(), RangeEquals(f32x4(1.0f, 2.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._1x0y(), RangeEquals(f32x4(1.0f, 2.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._1x0z(), RangeEquals(f32x4(1.0f, 2.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._1x0w(), RangeEquals(f32x4(1.0f, 2.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._1x10(), RangeEquals(f32x4(1.0f, 2.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._1x11(), RangeEquals(f32x4(1.0f, 2.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._1x1x(), RangeEquals(f32x4(1.0f, 2.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._1x1y(), RangeEquals(f32x4(1.0f, 2.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._1x1z(), RangeEquals(f32x4(1.0f, 2.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._1x1w(), RangeEquals(f32x4(1.0f, 2.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._1xx0(), RangeEquals(f32x4(1.0f, 2.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._1xx1(), RangeEquals(f32x4(1.0f, 2.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._1xxx(), RangeEquals(f32x4(1.0f, 2.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._1xxy(), RangeEquals(f32x4(1.0f, 2.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._1xxz(), RangeEquals(f32x4(1.0f, 2.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._1xxw(), RangeEquals(f32x4(1.0f, 2.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._1xy0(), RangeEquals(f32x4(1.0f, 2.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._1xy1(), RangeEquals(f32x4(1.0f, 2.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._1xyx(), RangeEquals(f32x4(1.0f, 2.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._1xyy(), RangeEquals(f32x4(1.0f, 2.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._1xyz(), RangeEquals(f32x4(1.0f, 2.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._1xyw(), RangeEquals(f32x4(1.0f, 2.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._1xz0(), RangeEquals(f32x4(1.0f, 2.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._1xz1(), RangeEquals(f32x4(1.0f, 2.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._1xzx(), RangeEquals(f32x4(1.0f, 2.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._1xzy(), RangeEquals(f32x4(1.0f, 2.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._1xzz(), RangeEquals(f32x4(1.0f, 2.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._1xzw(), RangeEquals(f32x4(1.0f, 2.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._1xw0(), RangeEquals(f32x4(1.0f, 2.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._1xw1(), RangeEquals(f32x4(1.0f, 2.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._1xwx(), RangeEquals(f32x4(1.0f, 2.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._1xwy(), RangeEquals(f32x4(1.0f, 2.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._1xwz(), RangeEquals(f32x4(1.0f, 2.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._1xww(), RangeEquals(f32x4(1.0f, 2.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._1y00(), RangeEquals(f32x4(1.0f, 3.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._1y01(), RangeEquals(f32x4(1.0f, 3.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._1y0x(), RangeEquals(f32x4(1.0f, 3.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._1y0y(), RangeEquals(f32x4(1.0f, 3.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._1y0z(), RangeEquals(f32x4(1.0f, 3.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._1y0w(), RangeEquals(f32x4(1.0f, 3.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._1y10(), RangeEquals(f32x4(1.0f, 3.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._1y11(), RangeEquals(f32x4(1.0f, 3.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._1y1x(), RangeEquals(f32x4(1.0f, 3.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._1y1y(), RangeEquals(f32x4(1.0f, 3.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._1y1z(), RangeEquals(f32x4(1.0f, 3.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._1y1w(), RangeEquals(f32x4(1.0f, 3.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._1yx0(), RangeEquals(f32x4(1.0f, 3.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._1yx1(), RangeEquals(f32x4(1.0f, 3.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._1yxx(), RangeEquals(f32x4(1.0f, 3.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._1yxy(), RangeEquals(f32x4(1.0f, 3.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._1yxz(), RangeEquals(f32x4(1.0f, 3.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._1yxw(), RangeEquals(f32x4(1.0f, 3.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._1yy0(), RangeEquals(f32x4(1.0f, 3.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._1yy1(), RangeEquals(f32x4(1.0f, 3.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._1yyx(), RangeEquals(f32x4(1.0f, 3.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._1yyy(), RangeEquals(f32x4(1.0f, 3.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._1yyz(), RangeEquals(f32x4(1.0f, 3.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._1yyw(), RangeEquals(f32x4(1.0f, 3.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._1yz0(), RangeEquals(f32x4(1.0f, 3.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._1yz1(), RangeEquals(f32x4(1.0f, 3.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._1yzx(), RangeEquals(f32x4(1.0f, 3.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._1yzy(), RangeEquals(f32x4(1.0f, 3.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._1yzz(), RangeEquals(f32x4(1.0f, 3.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._1yzw(), RangeEquals(f32x4(1.0f, 3.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._1yw0(), RangeEquals(f32x4(1.0f, 3.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._1yw1(), RangeEquals(f32x4(1.0f, 3.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._1ywx(), RangeEquals(f32x4(1.0f, 3.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._1ywy(), RangeEquals(f32x4(1.0f, 3.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._1ywz(), RangeEquals(f32x4(1.0f, 3.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._1yww(), RangeEquals(f32x4(1.0f, 3.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._1z00(), RangeEquals(f32x4(1.0f, 4.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._1z01(), RangeEquals(f32x4(1.0f, 4.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._1z0x(), RangeEquals(f32x4(1.0f, 4.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._1z0y(), RangeEquals(f32x4(1.0f, 4.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._1z0z(), RangeEquals(f32x4(1.0f, 4.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._1z0w(), RangeEquals(f32x4(1.0f, 4.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._1z10(), RangeEquals(f32x4(1.0f, 4.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._1z11(), RangeEquals(f32x4(1.0f, 4.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._1z1x(), RangeEquals(f32x4(1.0f, 4.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._1z1y(), RangeEquals(f32x4(1.0f, 4.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._1z1z(), RangeEquals(f32x4(1.0f, 4.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._1z1w(), RangeEquals(f32x4(1.0f, 4.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._1zx0(), RangeEquals(f32x4(1.0f, 4.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._1zx1(), RangeEquals(f32x4(1.0f, 4.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._1zxx(), RangeEquals(f32x4(1.0f, 4.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._1zxy(), RangeEquals(f32x4(1.0f, 4.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._1zxz(), RangeEquals(f32x4(1.0f, 4.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._1zxw(), RangeEquals(f32x4(1.0f, 4.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._1zy0(), RangeEquals(f32x4(1.0f, 4.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._1zy1(), RangeEquals(f32x4(1.0f, 4.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._1zyx(), RangeEquals(f32x4(1.0f, 4.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._1zyy(), RangeEquals(f32x4(1.0f, 4.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._1zyz(), RangeEquals(f32x4(1.0f, 4.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._1zyw(), RangeEquals(f32x4(1.0f, 4.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._1zz0(), RangeEquals(f32x4(1.0f, 4.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._1zz1(), RangeEquals(f32x4(1.0f, 4.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._1zzx(), RangeEquals(f32x4(1.0f, 4.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._1zzy(), RangeEquals(f32x4(1.0f, 4.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._1zzz(), RangeEquals(f32x4(1.0f, 4.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._1zzw(), RangeEquals(f32x4(1.0f, 4.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._1zw0(), RangeEquals(f32x4(1.0f, 4.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._1zw1(), RangeEquals(f32x4(1.0f, 4.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._1zwx(), RangeEquals(f32x4(1.0f, 4.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._1zwy(), RangeEquals(f32x4(1.0f, 4.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._1zwz(), RangeEquals(f32x4(1.0f, 4.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._1zww(), RangeEquals(f32x4(1.0f, 4.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp._1w00(), RangeEquals(f32x4(1.0f, 5.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp._1w01(), RangeEquals(f32x4(1.0f, 5.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp._1w0x(), RangeEquals(f32x4(1.0f, 5.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp._1w0y(), RangeEquals(f32x4(1.0f, 5.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp._1w0z(), RangeEquals(f32x4(1.0f, 5.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp._1w0w(), RangeEquals(f32x4(1.0f, 5.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp._1w10(), RangeEquals(f32x4(1.0f, 5.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp._1w11(), RangeEquals(f32x4(1.0f, 5.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp._1w1x(), RangeEquals(f32x4(1.0f, 5.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp._1w1y(), RangeEquals(f32x4(1.0f, 5.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp._1w1z(), RangeEquals(f32x4(1.0f, 5.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp._1w1w(), RangeEquals(f32x4(1.0f, 5.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp._1wx0(), RangeEquals(f32x4(1.0f, 5.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp._1wx1(), RangeEquals(f32x4(1.0f, 5.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp._1wxx(), RangeEquals(f32x4(1.0f, 5.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp._1wxy(), RangeEquals(f32x4(1.0f, 5.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp._1wxz(), RangeEquals(f32x4(1.0f, 5.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp._1wxw(), RangeEquals(f32x4(1.0f, 5.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp._1wy0(), RangeEquals(f32x4(1.0f, 5.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp._1wy1(), RangeEquals(f32x4(1.0f, 5.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp._1wyx(), RangeEquals(f32x4(1.0f, 5.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp._1wyy(), RangeEquals(f32x4(1.0f, 5.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp._1wyz(), RangeEquals(f32x4(1.0f, 5.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp._1wyw(), RangeEquals(f32x4(1.0f, 5.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp._1wz0(), RangeEquals(f32x4(1.0f, 5.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp._1wz1(), RangeEquals(f32x4(1.0f, 5.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp._1wzx(), RangeEquals(f32x4(1.0f, 5.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp._1wzy(), RangeEquals(f32x4(1.0f, 5.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp._1wzz(), RangeEquals(f32x4(1.0f, 5.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp._1wzw(), RangeEquals(f32x4(1.0f, 5.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp._1ww0(), RangeEquals(f32x4(1.0f, 5.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp._1ww1(), RangeEquals(f32x4(1.0f, 5.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp._1wwx(), RangeEquals(f32x4(1.0f, 5.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp._1wwy(), RangeEquals(f32x4(1.0f, 5.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp._1wwz(), RangeEquals(f32x4(1.0f, 5.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp._1www(), RangeEquals(f32x4(1.0f, 5.0f, 5.0f, 5.0f)));

    REQUIRE_THAT(tmp.x000(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.x001(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.x00x(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.x00y(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.x00z(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.x00w(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.x010(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.x011(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.x01x(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.x01y(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.x01z(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.x01w(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0x0(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0x1(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0xx(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0xy(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0xz(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0xw(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0y0(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0y1(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0yx(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0yy(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0yz(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0yw(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0z0(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0z1(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0zx(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0zy(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0zz(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0zw(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0w0(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0w1(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0wx(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0wy(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0wz(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0ww(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.x000(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.x001(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.x00x(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.x00y(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.x00z(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.x00w(), RangeEquals(f32x4(2.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.x010(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.x011(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.x01x(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.x01y(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.x01z(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.x01w(), RangeEquals(f32x4(2.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0x0(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0x1(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0xx(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0xy(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0xz(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0xw(), RangeEquals(f32x4(2.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0y0(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0y1(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0yx(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0yy(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0yz(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0yw(), RangeEquals(f32x4(2.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0z0(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0z1(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0zx(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0zy(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0zz(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0zw(), RangeEquals(f32x4(2.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.x0w0(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.x0w1(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.x0wx(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.x0wy(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.x0wz(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.x0ww(), RangeEquals(f32x4(2.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.x100(), RangeEquals(f32x4(2.0f, 1.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.x101(), RangeEquals(f32x4(2.0f, 1.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.x10x(), RangeEquals(f32x4(2.0f, 1.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.x10y(), RangeEquals(f32x4(2.0f, 1.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.x10z(), RangeEquals(f32x4(2.0f, 1.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.x10w(), RangeEquals(f32x4(2.0f, 1.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.x110(), RangeEquals(f32x4(2.0f, 1.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.x111(), RangeEquals(f32x4(2.0f, 1.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.x11x(), RangeEquals(f32x4(2.0f, 1.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.x11y(), RangeEquals(f32x4(2.0f, 1.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.x11z(), RangeEquals(f32x4(2.0f, 1.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.x11w(), RangeEquals(f32x4(2.0f, 1.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.x1x0(), RangeEquals(f32x4(2.0f, 1.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.x1x1(), RangeEquals(f32x4(2.0f, 1.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.x1xx(), RangeEquals(f32x4(2.0f, 1.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.x1xy(), RangeEquals(f32x4(2.0f, 1.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.x1xz(), RangeEquals(f32x4(2.0f, 1.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.x1xw(), RangeEquals(f32x4(2.0f, 1.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.x1y0(), RangeEquals(f32x4(2.0f, 1.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.x1y1(), RangeEquals(f32x4(2.0f, 1.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.x1yx(), RangeEquals(f32x4(2.0f, 1.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.x1yy(), RangeEquals(f32x4(2.0f, 1.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.x1yz(), RangeEquals(f32x4(2.0f, 1.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.x1yw(), RangeEquals(f32x4(2.0f, 1.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.x1z0(), RangeEquals(f32x4(2.0f, 1.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.x1z1(), RangeEquals(f32x4(2.0f, 1.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.x1zx(), RangeEquals(f32x4(2.0f, 1.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.x1zy(), RangeEquals(f32x4(2.0f, 1.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.x1zz(), RangeEquals(f32x4(2.0f, 1.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.x1zw(), RangeEquals(f32x4(2.0f, 1.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.x1w0(), RangeEquals(f32x4(2.0f, 1.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.x1w1(), RangeEquals(f32x4(2.0f, 1.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.x1wx(), RangeEquals(f32x4(2.0f, 1.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.x1wy(), RangeEquals(f32x4(2.0f, 1.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.x1wz(), RangeEquals(f32x4(2.0f, 1.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.x1ww(), RangeEquals(f32x4(2.0f, 1.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.xx00(), RangeEquals(f32x4(2.0f, 2.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.xx01(), RangeEquals(f32x4(2.0f, 2.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.xx0x(), RangeEquals(f32x4(2.0f, 2.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.xx0y(), RangeEquals(f32x4(2.0f, 2.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.xx0z(), RangeEquals(f32x4(2.0f, 2.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.xx0w(), RangeEquals(f32x4(2.0f, 2.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.xx10(), RangeEquals(f32x4(2.0f, 2.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.xx11(), RangeEquals(f32x4(2.0f, 2.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.xx1x(), RangeEquals(f32x4(2.0f, 2.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.xx1y(), RangeEquals(f32x4(2.0f, 2.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.xx1z(), RangeEquals(f32x4(2.0f, 2.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.xx1w(), RangeEquals(f32x4(2.0f, 2.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.xxx0(), RangeEquals(f32x4(2.0f, 2.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.xxx1(), RangeEquals(f32x4(2.0f, 2.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.xxxx(), RangeEquals(f32x4(2.0f, 2.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.xxxy(), RangeEquals(f32x4(2.0f, 2.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.xxxz(), RangeEquals(f32x4(2.0f, 2.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.xxxw(), RangeEquals(f32x4(2.0f, 2.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.xxy0(), RangeEquals(f32x4(2.0f, 2.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.xxy1(), RangeEquals(f32x4(2.0f, 2.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.xxyx(), RangeEquals(f32x4(2.0f, 2.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.xxyy(), RangeEquals(f32x4(2.0f, 2.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.xxyz(), RangeEquals(f32x4(2.0f, 2.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.xxyw(), RangeEquals(f32x4(2.0f, 2.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.xxz0(), RangeEquals(f32x4(2.0f, 2.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.xxz1(), RangeEquals(f32x4(2.0f, 2.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.xxzx(), RangeEquals(f32x4(2.0f, 2.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.xxzy(), RangeEquals(f32x4(2.0f, 2.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.xxzz(), RangeEquals(f32x4(2.0f, 2.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.xxzw(), RangeEquals(f32x4(2.0f, 2.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.xxw0(), RangeEquals(f32x4(2.0f, 2.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.xxw1(), RangeEquals(f32x4(2.0f, 2.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.xxwx(), RangeEquals(f32x4(2.0f, 2.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.xxwy(), RangeEquals(f32x4(2.0f, 2.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.xxwz(), RangeEquals(f32x4(2.0f, 2.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.xxww(), RangeEquals(f32x4(2.0f, 2.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.xy00(), RangeEquals(f32x4(2.0f, 3.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.xy01(), RangeEquals(f32x4(2.0f, 3.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.xy0x(), RangeEquals(f32x4(2.0f, 3.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.xy0y(), RangeEquals(f32x4(2.0f, 3.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.xy0z(), RangeEquals(f32x4(2.0f, 3.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.xy0w(), RangeEquals(f32x4(2.0f, 3.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.xy10(), RangeEquals(f32x4(2.0f, 3.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.xy11(), RangeEquals(f32x4(2.0f, 3.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.xy1x(), RangeEquals(f32x4(2.0f, 3.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.xy1y(), RangeEquals(f32x4(2.0f, 3.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.xy1z(), RangeEquals(f32x4(2.0f, 3.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.xy1w(), RangeEquals(f32x4(2.0f, 3.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.xyx0(), RangeEquals(f32x4(2.0f, 3.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.xyx1(), RangeEquals(f32x4(2.0f, 3.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.xyxx(), RangeEquals(f32x4(2.0f, 3.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.xyxy(), RangeEquals(f32x4(2.0f, 3.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.xyxz(), RangeEquals(f32x4(2.0f, 3.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.xyxw(), RangeEquals(f32x4(2.0f, 3.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.xyy0(), RangeEquals(f32x4(2.0f, 3.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.xyy1(), RangeEquals(f32x4(2.0f, 3.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.xyyx(), RangeEquals(f32x4(2.0f, 3.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.xyyy(), RangeEquals(f32x4(2.0f, 3.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.xyyz(), RangeEquals(f32x4(2.0f, 3.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.xyyw(), RangeEquals(f32x4(2.0f, 3.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.xyz0(), RangeEquals(f32x4(2.0f, 3.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.xyz1(), RangeEquals(f32x4(2.0f, 3.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.xyzx(), RangeEquals(f32x4(2.0f, 3.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.xyzy(), RangeEquals(f32x4(2.0f, 3.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.xyzz(), RangeEquals(f32x4(2.0f, 3.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.xyzw(), RangeEquals(f32x4(2.0f, 3.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.xyw0(), RangeEquals(f32x4(2.0f, 3.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.xyw1(), RangeEquals(f32x4(2.0f, 3.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.xywx(), RangeEquals(f32x4(2.0f, 3.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.xywy(), RangeEquals(f32x4(2.0f, 3.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.xywz(), RangeEquals(f32x4(2.0f, 3.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.xyww(), RangeEquals(f32x4(2.0f, 3.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.xz00(), RangeEquals(f32x4(2.0f, 4.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.xz01(), RangeEquals(f32x4(2.0f, 4.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.xz0x(), RangeEquals(f32x4(2.0f, 4.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.xz0y(), RangeEquals(f32x4(2.0f, 4.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.xz0z(), RangeEquals(f32x4(2.0f, 4.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.xz0w(), RangeEquals(f32x4(2.0f, 4.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.xz10(), RangeEquals(f32x4(2.0f, 4.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.xz11(), RangeEquals(f32x4(2.0f, 4.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.xz1x(), RangeEquals(f32x4(2.0f, 4.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.xz1y(), RangeEquals(f32x4(2.0f, 4.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.xz1z(), RangeEquals(f32x4(2.0f, 4.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.xz1w(), RangeEquals(f32x4(2.0f, 4.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.xzx0(), RangeEquals(f32x4(2.0f, 4.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.xzx1(), RangeEquals(f32x4(2.0f, 4.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.xzxx(), RangeEquals(f32x4(2.0f, 4.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.xzxy(), RangeEquals(f32x4(2.0f, 4.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.xzxz(), RangeEquals(f32x4(2.0f, 4.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.xzxw(), RangeEquals(f32x4(2.0f, 4.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.xzy0(), RangeEquals(f32x4(2.0f, 4.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.xzy1(), RangeEquals(f32x4(2.0f, 4.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.xzyx(), RangeEquals(f32x4(2.0f, 4.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.xzyy(), RangeEquals(f32x4(2.0f, 4.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.xzyz(), RangeEquals(f32x4(2.0f, 4.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.xzyw(), RangeEquals(f32x4(2.0f, 4.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.xzz0(), RangeEquals(f32x4(2.0f, 4.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.xzz1(), RangeEquals(f32x4(2.0f, 4.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.xzzx(), RangeEquals(f32x4(2.0f, 4.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.xzzy(), RangeEquals(f32x4(2.0f, 4.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.xzzz(), RangeEquals(f32x4(2.0f, 4.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.xzzw(), RangeEquals(f32x4(2.0f, 4.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.xzw0(), RangeEquals(f32x4(2.0f, 4.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.xzw1(), RangeEquals(f32x4(2.0f, 4.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.xzwx(), RangeEquals(f32x4(2.0f, 4.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.xzwy(), RangeEquals(f32x4(2.0f, 4.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.xzwz(), RangeEquals(f32x4(2.0f, 4.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.xzww(), RangeEquals(f32x4(2.0f, 4.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.xw00(), RangeEquals(f32x4(2.0f, 5.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.xw01(), RangeEquals(f32x4(2.0f, 5.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.xw0x(), RangeEquals(f32x4(2.0f, 5.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.xw0y(), RangeEquals(f32x4(2.0f, 5.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.xw0z(), RangeEquals(f32x4(2.0f, 5.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.xw0w(), RangeEquals(f32x4(2.0f, 5.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.xw10(), RangeEquals(f32x4(2.0f, 5.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.xw11(), RangeEquals(f32x4(2.0f, 5.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.xw1x(), RangeEquals(f32x4(2.0f, 5.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.xw1y(), RangeEquals(f32x4(2.0f, 5.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.xw1z(), RangeEquals(f32x4(2.0f, 5.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.xw1w(), RangeEquals(f32x4(2.0f, 5.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.xwx0(), RangeEquals(f32x4(2.0f, 5.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.xwx1(), RangeEquals(f32x4(2.0f, 5.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.xwxx(), RangeEquals(f32x4(2.0f, 5.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.xwxy(), RangeEquals(f32x4(2.0f, 5.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.xwxz(), RangeEquals(f32x4(2.0f, 5.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.xwxw(), RangeEquals(f32x4(2.0f, 5.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.xwy0(), RangeEquals(f32x4(2.0f, 5.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.xwy1(), RangeEquals(f32x4(2.0f, 5.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.xwyx(), RangeEquals(f32x4(2.0f, 5.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.xwyy(), RangeEquals(f32x4(2.0f, 5.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.xwyz(), RangeEquals(f32x4(2.0f, 5.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.xwyw(), RangeEquals(f32x4(2.0f, 5.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.xwz0(), RangeEquals(f32x4(2.0f, 5.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.xwz1(), RangeEquals(f32x4(2.0f, 5.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.xwzx(), RangeEquals(f32x4(2.0f, 5.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.xwzy(), RangeEquals(f32x4(2.0f, 5.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.xwzz(), RangeEquals(f32x4(2.0f, 5.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.xwzw(), RangeEquals(f32x4(2.0f, 5.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.xww0(), RangeEquals(f32x4(2.0f, 5.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.xww1(), RangeEquals(f32x4(2.0f, 5.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.xwwx(), RangeEquals(f32x4(2.0f, 5.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.xwwy(), RangeEquals(f32x4(2.0f, 5.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.xwwz(), RangeEquals(f32x4(2.0f, 5.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.xwww(), RangeEquals(f32x4(2.0f, 5.0f, 5.0f, 5.0f)));

    REQUIRE_THAT(tmp.y000(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.y001(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.y00x(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.y00y(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.y00z(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.y00w(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.y010(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.y011(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.y01x(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.y01y(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.y01z(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.y01w(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0x0(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0x1(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0xx(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0xy(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0xz(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0xw(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0y0(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0y1(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0yx(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0yy(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0yz(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0yw(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0z0(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0z1(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0zx(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0zy(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0zz(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0zw(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0w0(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0w1(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0wx(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0wy(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0wz(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0ww(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.y000(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.y001(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.y00x(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.y00y(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.y00z(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.y00w(), RangeEquals(f32x4(3.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.y010(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.y011(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.y01x(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.y01y(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.y01z(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.y01w(), RangeEquals(f32x4(3.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0x0(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0x1(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0xx(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0xy(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0xz(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0xw(), RangeEquals(f32x4(3.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0y0(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0y1(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0yx(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0yy(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0yz(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0yw(), RangeEquals(f32x4(3.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0z0(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0z1(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0zx(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0zy(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0zz(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0zw(), RangeEquals(f32x4(3.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.y0w0(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.y0w1(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.y0wx(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.y0wy(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.y0wz(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.y0ww(), RangeEquals(f32x4(3.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.y100(), RangeEquals(f32x4(3.0f, 1.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.y101(), RangeEquals(f32x4(3.0f, 1.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.y10x(), RangeEquals(f32x4(3.0f, 1.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.y10y(), RangeEquals(f32x4(3.0f, 1.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.y10z(), RangeEquals(f32x4(3.0f, 1.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.y10w(), RangeEquals(f32x4(3.0f, 1.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.y110(), RangeEquals(f32x4(3.0f, 1.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.y111(), RangeEquals(f32x4(3.0f, 1.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.y11x(), RangeEquals(f32x4(3.0f, 1.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.y11y(), RangeEquals(f32x4(3.0f, 1.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.y11z(), RangeEquals(f32x4(3.0f, 1.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.y11w(), RangeEquals(f32x4(3.0f, 1.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.y1x0(), RangeEquals(f32x4(3.0f, 1.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.y1x1(), RangeEquals(f32x4(3.0f, 1.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.y1xx(), RangeEquals(f32x4(3.0f, 1.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.y1xy(), RangeEquals(f32x4(3.0f, 1.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.y1xz(), RangeEquals(f32x4(3.0f, 1.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.y1xw(), RangeEquals(f32x4(3.0f, 1.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.y1y0(), RangeEquals(f32x4(3.0f, 1.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.y1y1(), RangeEquals(f32x4(3.0f, 1.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.y1yx(), RangeEquals(f32x4(3.0f, 1.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.y1yy(), RangeEquals(f32x4(3.0f, 1.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.y1yz(), RangeEquals(f32x4(3.0f, 1.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.y1yw(), RangeEquals(f32x4(3.0f, 1.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.y1z0(), RangeEquals(f32x4(3.0f, 1.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.y1z1(), RangeEquals(f32x4(3.0f, 1.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.y1zx(), RangeEquals(f32x4(3.0f, 1.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.y1zy(), RangeEquals(f32x4(3.0f, 1.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.y1zz(), RangeEquals(f32x4(3.0f, 1.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.y1zw(), RangeEquals(f32x4(3.0f, 1.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.y1w0(), RangeEquals(f32x4(3.0f, 1.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.y1w1(), RangeEquals(f32x4(3.0f, 1.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.y1wx(), RangeEquals(f32x4(3.0f, 1.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.y1wy(), RangeEquals(f32x4(3.0f, 1.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.y1wz(), RangeEquals(f32x4(3.0f, 1.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.y1ww(), RangeEquals(f32x4(3.0f, 1.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.yx00(), RangeEquals(f32x4(3.0f, 2.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.yx01(), RangeEquals(f32x4(3.0f, 2.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.yx0x(), RangeEquals(f32x4(3.0f, 2.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.yx0y(), RangeEquals(f32x4(3.0f, 2.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.yx0z(), RangeEquals(f32x4(3.0f, 2.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.yx0w(), RangeEquals(f32x4(3.0f, 2.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.yx10(), RangeEquals(f32x4(3.0f, 2.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.yx11(), RangeEquals(f32x4(3.0f, 2.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.yx1x(), RangeEquals(f32x4(3.0f, 2.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.yx1y(), RangeEquals(f32x4(3.0f, 2.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.yx1z(), RangeEquals(f32x4(3.0f, 2.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.yx1w(), RangeEquals(f32x4(3.0f, 2.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.yxx0(), RangeEquals(f32x4(3.0f, 2.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.yxx1(), RangeEquals(f32x4(3.0f, 2.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.yxxx(), RangeEquals(f32x4(3.0f, 2.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.yxxy(), RangeEquals(f32x4(3.0f, 2.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.yxxz(), RangeEquals(f32x4(3.0f, 2.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.yxxw(), RangeEquals(f32x4(3.0f, 2.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.yxy0(), RangeEquals(f32x4(3.0f, 2.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.yxy1(), RangeEquals(f32x4(3.0f, 2.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.yxyx(), RangeEquals(f32x4(3.0f, 2.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.yxyy(), RangeEquals(f32x4(3.0f, 2.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.yxyz(), RangeEquals(f32x4(3.0f, 2.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.yxyw(), RangeEquals(f32x4(3.0f, 2.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.yxz0(), RangeEquals(f32x4(3.0f, 2.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.yxz1(), RangeEquals(f32x4(3.0f, 2.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.yxzx(), RangeEquals(f32x4(3.0f, 2.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.yxzy(), RangeEquals(f32x4(3.0f, 2.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.yxzz(), RangeEquals(f32x4(3.0f, 2.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.yxzw(), RangeEquals(f32x4(3.0f, 2.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.yxw0(), RangeEquals(f32x4(3.0f, 2.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.yxw1(), RangeEquals(f32x4(3.0f, 2.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.yxwx(), RangeEquals(f32x4(3.0f, 2.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.yxwy(), RangeEquals(f32x4(3.0f, 2.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.yxwz(), RangeEquals(f32x4(3.0f, 2.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.yxww(), RangeEquals(f32x4(3.0f, 2.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.yy00(), RangeEquals(f32x4(3.0f, 3.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.yy01(), RangeEquals(f32x4(3.0f, 3.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.yy0x(), RangeEquals(f32x4(3.0f, 3.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.yy0y(), RangeEquals(f32x4(3.0f, 3.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.yy0z(), RangeEquals(f32x4(3.0f, 3.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.yy0w(), RangeEquals(f32x4(3.0f, 3.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.yy10(), RangeEquals(f32x4(3.0f, 3.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.yy11(), RangeEquals(f32x4(3.0f, 3.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.yy1x(), RangeEquals(f32x4(3.0f, 3.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.yy1y(), RangeEquals(f32x4(3.0f, 3.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.yy1z(), RangeEquals(f32x4(3.0f, 3.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.yy1w(), RangeEquals(f32x4(3.0f, 3.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.yyx0(), RangeEquals(f32x4(3.0f, 3.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.yyx1(), RangeEquals(f32x4(3.0f, 3.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.yyxx(), RangeEquals(f32x4(3.0f, 3.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.yyxy(), RangeEquals(f32x4(3.0f, 3.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.yyxz(), RangeEquals(f32x4(3.0f, 3.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.yyxw(), RangeEquals(f32x4(3.0f, 3.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.yyy0(), RangeEquals(f32x4(3.0f, 3.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.yyy1(), RangeEquals(f32x4(3.0f, 3.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.yyyx(), RangeEquals(f32x4(3.0f, 3.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.yyyy(), RangeEquals(f32x4(3.0f, 3.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.yyyz(), RangeEquals(f32x4(3.0f, 3.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.yyyw(), RangeEquals(f32x4(3.0f, 3.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.yyz0(), RangeEquals(f32x4(3.0f, 3.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.yyz1(), RangeEquals(f32x4(3.0f, 3.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.yyzx(), RangeEquals(f32x4(3.0f, 3.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.yyzy(), RangeEquals(f32x4(3.0f, 3.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.yyzz(), RangeEquals(f32x4(3.0f, 3.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.yyzw(), RangeEquals(f32x4(3.0f, 3.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.yyw0(), RangeEquals(f32x4(3.0f, 3.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.yyw1(), RangeEquals(f32x4(3.0f, 3.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.yywx(), RangeEquals(f32x4(3.0f, 3.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.yywy(), RangeEquals(f32x4(3.0f, 3.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.yywz(), RangeEquals(f32x4(3.0f, 3.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.yyww(), RangeEquals(f32x4(3.0f, 3.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.yz00(), RangeEquals(f32x4(3.0f, 4.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.yz01(), RangeEquals(f32x4(3.0f, 4.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.yz0x(), RangeEquals(f32x4(3.0f, 4.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.yz0y(), RangeEquals(f32x4(3.0f, 4.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.yz0z(), RangeEquals(f32x4(3.0f, 4.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.yz0w(), RangeEquals(f32x4(3.0f, 4.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.yz10(), RangeEquals(f32x4(3.0f, 4.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.yz11(), RangeEquals(f32x4(3.0f, 4.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.yz1x(), RangeEquals(f32x4(3.0f, 4.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.yz1y(), RangeEquals(f32x4(3.0f, 4.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.yz1z(), RangeEquals(f32x4(3.0f, 4.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.yz1w(), RangeEquals(f32x4(3.0f, 4.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.yzx0(), RangeEquals(f32x4(3.0f, 4.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.yzx1(), RangeEquals(f32x4(3.0f, 4.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.yzxx(), RangeEquals(f32x4(3.0f, 4.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.yzxy(), RangeEquals(f32x4(3.0f, 4.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.yzxz(), RangeEquals(f32x4(3.0f, 4.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.yzxw(), RangeEquals(f32x4(3.0f, 4.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.yzy0(), RangeEquals(f32x4(3.0f, 4.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.yzy1(), RangeEquals(f32x4(3.0f, 4.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.yzyx(), RangeEquals(f32x4(3.0f, 4.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.yzyy(), RangeEquals(f32x4(3.0f, 4.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.yzyz(), RangeEquals(f32x4(3.0f, 4.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.yzyw(), RangeEquals(f32x4(3.0f, 4.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.yzz0(), RangeEquals(f32x4(3.0f, 4.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.yzz1(), RangeEquals(f32x4(3.0f, 4.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.yzzx(), RangeEquals(f32x4(3.0f, 4.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.yzzy(), RangeEquals(f32x4(3.0f, 4.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.yzzz(), RangeEquals(f32x4(3.0f, 4.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.yzzw(), RangeEquals(f32x4(3.0f, 4.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.yzw0(), RangeEquals(f32x4(3.0f, 4.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.yzw1(), RangeEquals(f32x4(3.0f, 4.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.yzwx(), RangeEquals(f32x4(3.0f, 4.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.yzwy(), RangeEquals(f32x4(3.0f, 4.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.yzwz(), RangeEquals(f32x4(3.0f, 4.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.yzww(), RangeEquals(f32x4(3.0f, 4.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.yw00(), RangeEquals(f32x4(3.0f, 5.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.yw01(), RangeEquals(f32x4(3.0f, 5.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.yw0x(), RangeEquals(f32x4(3.0f, 5.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.yw0y(), RangeEquals(f32x4(3.0f, 5.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.yw0z(), RangeEquals(f32x4(3.0f, 5.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.yw0w(), RangeEquals(f32x4(3.0f, 5.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.yw10(), RangeEquals(f32x4(3.0f, 5.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.yw11(), RangeEquals(f32x4(3.0f, 5.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.yw1x(), RangeEquals(f32x4(3.0f, 5.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.yw1y(), RangeEquals(f32x4(3.0f, 5.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.yw1z(), RangeEquals(f32x4(3.0f, 5.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.yw1w(), RangeEquals(f32x4(3.0f, 5.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.ywx0(), RangeEquals(f32x4(3.0f, 5.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.ywx1(), RangeEquals(f32x4(3.0f, 5.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.ywxx(), RangeEquals(f32x4(3.0f, 5.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.ywxy(), RangeEquals(f32x4(3.0f, 5.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.ywxz(), RangeEquals(f32x4(3.0f, 5.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.ywxw(), RangeEquals(f32x4(3.0f, 5.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.ywy0(), RangeEquals(f32x4(3.0f, 5.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.ywy1(), RangeEquals(f32x4(3.0f, 5.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.ywyx(), RangeEquals(f32x4(3.0f, 5.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.ywyy(), RangeEquals(f32x4(3.0f, 5.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.ywyz(), RangeEquals(f32x4(3.0f, 5.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.ywyw(), RangeEquals(f32x4(3.0f, 5.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.ywz0(), RangeEquals(f32x4(3.0f, 5.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.ywz1(), RangeEquals(f32x4(3.0f, 5.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.ywzx(), RangeEquals(f32x4(3.0f, 5.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.ywzy(), RangeEquals(f32x4(3.0f, 5.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.ywzz(), RangeEquals(f32x4(3.0f, 5.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.ywzw(), RangeEquals(f32x4(3.0f, 5.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.yww0(), RangeEquals(f32x4(3.0f, 5.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.yww1(), RangeEquals(f32x4(3.0f, 5.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.ywwx(), RangeEquals(f32x4(3.0f, 5.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.ywwy(), RangeEquals(f32x4(3.0f, 5.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.ywwz(), RangeEquals(f32x4(3.0f, 5.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.ywww(), RangeEquals(f32x4(3.0f, 5.0f, 5.0f, 5.0f)));

    REQUIRE_THAT(tmp.z000(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.z001(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.z00x(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.z00y(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.z00z(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.z00w(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.z010(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.z011(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.z01x(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.z01y(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.z01z(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.z01w(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0x0(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0x1(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0xx(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0xy(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0xz(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0xw(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0y0(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0y1(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0yx(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0yy(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0yz(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0yw(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0z0(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0z1(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0zx(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0zy(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0zz(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0zw(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0w0(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0w1(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0wx(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0wy(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0wz(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0ww(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.z000(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.z001(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.z00x(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.z00y(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.z00z(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.z00w(), RangeEquals(f32x4(4.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.z010(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.z011(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.z01x(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.z01y(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.z01z(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.z01w(), RangeEquals(f32x4(4.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0x0(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0x1(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0xx(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0xy(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0xz(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0xw(), RangeEquals(f32x4(4.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0y0(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0y1(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0yx(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0yy(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0yz(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0yw(), RangeEquals(f32x4(4.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0z0(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0z1(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0zx(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0zy(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0zz(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0zw(), RangeEquals(f32x4(4.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.z0w0(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.z0w1(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.z0wx(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.z0wy(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.z0wz(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.z0ww(), RangeEquals(f32x4(4.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.z100(), RangeEquals(f32x4(4.0f, 1.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.z101(), RangeEquals(f32x4(4.0f, 1.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.z10x(), RangeEquals(f32x4(4.0f, 1.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.z10y(), RangeEquals(f32x4(4.0f, 1.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.z10z(), RangeEquals(f32x4(4.0f, 1.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.z10w(), RangeEquals(f32x4(4.0f, 1.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.z110(), RangeEquals(f32x4(4.0f, 1.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.z111(), RangeEquals(f32x4(4.0f, 1.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.z11x(), RangeEquals(f32x4(4.0f, 1.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.z11y(), RangeEquals(f32x4(4.0f, 1.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.z11z(), RangeEquals(f32x4(4.0f, 1.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.z11w(), RangeEquals(f32x4(4.0f, 1.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.z1x0(), RangeEquals(f32x4(4.0f, 1.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.z1x1(), RangeEquals(f32x4(4.0f, 1.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.z1xx(), RangeEquals(f32x4(4.0f, 1.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.z1xy(), RangeEquals(f32x4(4.0f, 1.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.z1xz(), RangeEquals(f32x4(4.0f, 1.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.z1xw(), RangeEquals(f32x4(4.0f, 1.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.z1y0(), RangeEquals(f32x4(4.0f, 1.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.z1y1(), RangeEquals(f32x4(4.0f, 1.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.z1yx(), RangeEquals(f32x4(4.0f, 1.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.z1yy(), RangeEquals(f32x4(4.0f, 1.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.z1yz(), RangeEquals(f32x4(4.0f, 1.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.z1yw(), RangeEquals(f32x4(4.0f, 1.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.z1z0(), RangeEquals(f32x4(4.0f, 1.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.z1z1(), RangeEquals(f32x4(4.0f, 1.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.z1zx(), RangeEquals(f32x4(4.0f, 1.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.z1zy(), RangeEquals(f32x4(4.0f, 1.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.z1zz(), RangeEquals(f32x4(4.0f, 1.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.z1zw(), RangeEquals(f32x4(4.0f, 1.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.z1w0(), RangeEquals(f32x4(4.0f, 1.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.z1w1(), RangeEquals(f32x4(4.0f, 1.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.z1wx(), RangeEquals(f32x4(4.0f, 1.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.z1wy(), RangeEquals(f32x4(4.0f, 1.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.z1wz(), RangeEquals(f32x4(4.0f, 1.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.z1ww(), RangeEquals(f32x4(4.0f, 1.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.zx00(), RangeEquals(f32x4(4.0f, 2.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.zx01(), RangeEquals(f32x4(4.0f, 2.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.zx0x(), RangeEquals(f32x4(4.0f, 2.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.zx0y(), RangeEquals(f32x4(4.0f, 2.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.zx0z(), RangeEquals(f32x4(4.0f, 2.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.zx0w(), RangeEquals(f32x4(4.0f, 2.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.zx10(), RangeEquals(f32x4(4.0f, 2.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.zx11(), RangeEquals(f32x4(4.0f, 2.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.zx1x(), RangeEquals(f32x4(4.0f, 2.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.zx1y(), RangeEquals(f32x4(4.0f, 2.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.zx1z(), RangeEquals(f32x4(4.0f, 2.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.zx1w(), RangeEquals(f32x4(4.0f, 2.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.zxx0(), RangeEquals(f32x4(4.0f, 2.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.zxx1(), RangeEquals(f32x4(4.0f, 2.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.zxxx(), RangeEquals(f32x4(4.0f, 2.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.zxxy(), RangeEquals(f32x4(4.0f, 2.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.zxxz(), RangeEquals(f32x4(4.0f, 2.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.zxxw(), RangeEquals(f32x4(4.0f, 2.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.zxy0(), RangeEquals(f32x4(4.0f, 2.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.zxy1(), RangeEquals(f32x4(4.0f, 2.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.zxyx(), RangeEquals(f32x4(4.0f, 2.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.zxyy(), RangeEquals(f32x4(4.0f, 2.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.zxyz(), RangeEquals(f32x4(4.0f, 2.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.zxyw(), RangeEquals(f32x4(4.0f, 2.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.zxz0(), RangeEquals(f32x4(4.0f, 2.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.zxz1(), RangeEquals(f32x4(4.0f, 2.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.zxzx(), RangeEquals(f32x4(4.0f, 2.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.zxzy(), RangeEquals(f32x4(4.0f, 2.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.zxzz(), RangeEquals(f32x4(4.0f, 2.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.zxzw(), RangeEquals(f32x4(4.0f, 2.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.zxw0(), RangeEquals(f32x4(4.0f, 2.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.zxw1(), RangeEquals(f32x4(4.0f, 2.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.zxwx(), RangeEquals(f32x4(4.0f, 2.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.zxwy(), RangeEquals(f32x4(4.0f, 2.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.zxwz(), RangeEquals(f32x4(4.0f, 2.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.zxww(), RangeEquals(f32x4(4.0f, 2.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.zy00(), RangeEquals(f32x4(4.0f, 3.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.zy01(), RangeEquals(f32x4(4.0f, 3.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.zy0x(), RangeEquals(f32x4(4.0f, 3.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.zy0y(), RangeEquals(f32x4(4.0f, 3.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.zy0z(), RangeEquals(f32x4(4.0f, 3.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.zy0w(), RangeEquals(f32x4(4.0f, 3.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.zy10(), RangeEquals(f32x4(4.0f, 3.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.zy11(), RangeEquals(f32x4(4.0f, 3.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.zy1x(), RangeEquals(f32x4(4.0f, 3.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.zy1y(), RangeEquals(f32x4(4.0f, 3.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.zy1z(), RangeEquals(f32x4(4.0f, 3.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.zy1w(), RangeEquals(f32x4(4.0f, 3.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.zyx0(), RangeEquals(f32x4(4.0f, 3.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.zyx1(), RangeEquals(f32x4(4.0f, 3.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.zyxx(), RangeEquals(f32x4(4.0f, 3.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.zyxy(), RangeEquals(f32x4(4.0f, 3.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.zyxz(), RangeEquals(f32x4(4.0f, 3.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.zyxw(), RangeEquals(f32x4(4.0f, 3.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.zyy0(), RangeEquals(f32x4(4.0f, 3.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.zyy1(), RangeEquals(f32x4(4.0f, 3.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.zyyx(), RangeEquals(f32x4(4.0f, 3.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.zyyy(), RangeEquals(f32x4(4.0f, 3.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.zyyz(), RangeEquals(f32x4(4.0f, 3.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.zyyw(), RangeEquals(f32x4(4.0f, 3.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.zyz0(), RangeEquals(f32x4(4.0f, 3.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.zyz1(), RangeEquals(f32x4(4.0f, 3.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.zyzx(), RangeEquals(f32x4(4.0f, 3.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.zyzy(), RangeEquals(f32x4(4.0f, 3.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.zyzz(), RangeEquals(f32x4(4.0f, 3.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.zyzw(), RangeEquals(f32x4(4.0f, 3.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.zyw0(), RangeEquals(f32x4(4.0f, 3.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.zyw1(), RangeEquals(f32x4(4.0f, 3.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.zywx(), RangeEquals(f32x4(4.0f, 3.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.zywy(), RangeEquals(f32x4(4.0f, 3.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.zywz(), RangeEquals(f32x4(4.0f, 3.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.zyww(), RangeEquals(f32x4(4.0f, 3.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.zz00(), RangeEquals(f32x4(4.0f, 4.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.zz01(), RangeEquals(f32x4(4.0f, 4.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.zz0x(), RangeEquals(f32x4(4.0f, 4.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.zz0y(), RangeEquals(f32x4(4.0f, 4.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.zz0z(), RangeEquals(f32x4(4.0f, 4.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.zz0w(), RangeEquals(f32x4(4.0f, 4.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.zz10(), RangeEquals(f32x4(4.0f, 4.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.zz11(), RangeEquals(f32x4(4.0f, 4.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.zz1x(), RangeEquals(f32x4(4.0f, 4.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.zz1y(), RangeEquals(f32x4(4.0f, 4.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.zz1z(), RangeEquals(f32x4(4.0f, 4.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.zz1w(), RangeEquals(f32x4(4.0f, 4.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.zzx0(), RangeEquals(f32x4(4.0f, 4.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.zzx1(), RangeEquals(f32x4(4.0f, 4.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.zzxx(), RangeEquals(f32x4(4.0f, 4.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.zzxy(), RangeEquals(f32x4(4.0f, 4.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.zzxz(), RangeEquals(f32x4(4.0f, 4.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.zzxw(), RangeEquals(f32x4(4.0f, 4.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.zzy0(), RangeEquals(f32x4(4.0f, 4.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.zzy1(), RangeEquals(f32x4(4.0f, 4.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.zzyx(), RangeEquals(f32x4(4.0f, 4.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.zzyy(), RangeEquals(f32x4(4.0f, 4.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.zzyz(), RangeEquals(f32x4(4.0f, 4.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.zzyw(), RangeEquals(f32x4(4.0f, 4.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.zzz0(), RangeEquals(f32x4(4.0f, 4.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.zzz1(), RangeEquals(f32x4(4.0f, 4.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.zzzx(), RangeEquals(f32x4(4.0f, 4.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.zzzy(), RangeEquals(f32x4(4.0f, 4.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.zzzz(), RangeEquals(f32x4(4.0f, 4.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.zzzw(), RangeEquals(f32x4(4.0f, 4.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.zzw0(), RangeEquals(f32x4(4.0f, 4.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.zzw1(), RangeEquals(f32x4(4.0f, 4.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.zzwx(), RangeEquals(f32x4(4.0f, 4.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.zzwy(), RangeEquals(f32x4(4.0f, 4.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.zzwz(), RangeEquals(f32x4(4.0f, 4.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.zzww(), RangeEquals(f32x4(4.0f, 4.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.zw00(), RangeEquals(f32x4(4.0f, 5.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.zw01(), RangeEquals(f32x4(4.0f, 5.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.zw0x(), RangeEquals(f32x4(4.0f, 5.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.zw0y(), RangeEquals(f32x4(4.0f, 5.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.zw0z(), RangeEquals(f32x4(4.0f, 5.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.zw0w(), RangeEquals(f32x4(4.0f, 5.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.zw10(), RangeEquals(f32x4(4.0f, 5.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.zw11(), RangeEquals(f32x4(4.0f, 5.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.zw1x(), RangeEquals(f32x4(4.0f, 5.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.zw1y(), RangeEquals(f32x4(4.0f, 5.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.zw1z(), RangeEquals(f32x4(4.0f, 5.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.zw1w(), RangeEquals(f32x4(4.0f, 5.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.zwx0(), RangeEquals(f32x4(4.0f, 5.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.zwx1(), RangeEquals(f32x4(4.0f, 5.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.zwxx(), RangeEquals(f32x4(4.0f, 5.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.zwxy(), RangeEquals(f32x4(4.0f, 5.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.zwxz(), RangeEquals(f32x4(4.0f, 5.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.zwxw(), RangeEquals(f32x4(4.0f, 5.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.zwy0(), RangeEquals(f32x4(4.0f, 5.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.zwy1(), RangeEquals(f32x4(4.0f, 5.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.zwyx(), RangeEquals(f32x4(4.0f, 5.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.zwyy(), RangeEquals(f32x4(4.0f, 5.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.zwyz(), RangeEquals(f32x4(4.0f, 5.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.zwyw(), RangeEquals(f32x4(4.0f, 5.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.zwz0(), RangeEquals(f32x4(4.0f, 5.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.zwz1(), RangeEquals(f32x4(4.0f, 5.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.zwzx(), RangeEquals(f32x4(4.0f, 5.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.zwzy(), RangeEquals(f32x4(4.0f, 5.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.zwzz(), RangeEquals(f32x4(4.0f, 5.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.zwzw(), RangeEquals(f32x4(4.0f, 5.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.zww0(), RangeEquals(f32x4(4.0f, 5.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.zww1(), RangeEquals(f32x4(4.0f, 5.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.zwwx(), RangeEquals(f32x4(4.0f, 5.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.zwwy(), RangeEquals(f32x4(4.0f, 5.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.zwwz(), RangeEquals(f32x4(4.0f, 5.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.zwww(), RangeEquals(f32x4(4.0f, 5.0f, 5.0f, 5.0f)));

    REQUIRE_THAT(tmp.w000(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.w001(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.w00x(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.w00y(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.w00z(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.w00w(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.w010(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.w011(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.w01x(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.w01y(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.w01z(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.w01w(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0x0(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0x1(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0xx(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0xy(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0xz(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0xw(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0y0(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0y1(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0yx(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0yy(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0yz(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0yw(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0z0(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0z1(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0zx(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0zy(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0zz(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0zw(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0w0(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0w1(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0wx(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0wy(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0wz(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0ww(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.w000(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.w001(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.w00x(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.w00y(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.w00z(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.w00w(), RangeEquals(f32x4(5.0f, 0.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.w010(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.w011(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.w01x(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.w01y(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.w01z(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.w01w(), RangeEquals(f32x4(5.0f, 0.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0x0(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0x1(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0xx(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0xy(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0xz(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0xw(), RangeEquals(f32x4(5.0f, 0.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0y0(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0y1(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0yx(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0yy(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0yz(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0yw(), RangeEquals(f32x4(5.0f, 0.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0z0(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0z1(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0zx(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0zy(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0zz(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0zw(), RangeEquals(f32x4(5.0f, 0.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.w0w0(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.w0w1(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.w0wx(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.w0wy(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.w0wz(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.w0ww(), RangeEquals(f32x4(5.0f, 0.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.w100(), RangeEquals(f32x4(5.0f, 1.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.w101(), RangeEquals(f32x4(5.0f, 1.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.w10x(), RangeEquals(f32x4(5.0f, 1.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.w10y(), RangeEquals(f32x4(5.0f, 1.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.w10z(), RangeEquals(f32x4(5.0f, 1.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.w10w(), RangeEquals(f32x4(5.0f, 1.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.w110(), RangeEquals(f32x4(5.0f, 1.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.w111(), RangeEquals(f32x4(5.0f, 1.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.w11x(), RangeEquals(f32x4(5.0f, 1.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.w11y(), RangeEquals(f32x4(5.0f, 1.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.w11z(), RangeEquals(f32x4(5.0f, 1.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.w11w(), RangeEquals(f32x4(5.0f, 1.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.w1x0(), RangeEquals(f32x4(5.0f, 1.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.w1x1(), RangeEquals(f32x4(5.0f, 1.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.w1xx(), RangeEquals(f32x4(5.0f, 1.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.w1xy(), RangeEquals(f32x4(5.0f, 1.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.w1xz(), RangeEquals(f32x4(5.0f, 1.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.w1xw(), RangeEquals(f32x4(5.0f, 1.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.w1y0(), RangeEquals(f32x4(5.0f, 1.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.w1y1(), RangeEquals(f32x4(5.0f, 1.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.w1yx(), RangeEquals(f32x4(5.0f, 1.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.w1yy(), RangeEquals(f32x4(5.0f, 1.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.w1yz(), RangeEquals(f32x4(5.0f, 1.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.w1yw(), RangeEquals(f32x4(5.0f, 1.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.w1z0(), RangeEquals(f32x4(5.0f, 1.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.w1z1(), RangeEquals(f32x4(5.0f, 1.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.w1zx(), RangeEquals(f32x4(5.0f, 1.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.w1zy(), RangeEquals(f32x4(5.0f, 1.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.w1zz(), RangeEquals(f32x4(5.0f, 1.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.w1zw(), RangeEquals(f32x4(5.0f, 1.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.w1w0(), RangeEquals(f32x4(5.0f, 1.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.w1w1(), RangeEquals(f32x4(5.0f, 1.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.w1wx(), RangeEquals(f32x4(5.0f, 1.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.w1wy(), RangeEquals(f32x4(5.0f, 1.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.w1wz(), RangeEquals(f32x4(5.0f, 1.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.w1ww(), RangeEquals(f32x4(5.0f, 1.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.wx00(), RangeEquals(f32x4(5.0f, 2.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.wx01(), RangeEquals(f32x4(5.0f, 2.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.wx0x(), RangeEquals(f32x4(5.0f, 2.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.wx0y(), RangeEquals(f32x4(5.0f, 2.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.wx0z(), RangeEquals(f32x4(5.0f, 2.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.wx0w(), RangeEquals(f32x4(5.0f, 2.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.wx10(), RangeEquals(f32x4(5.0f, 2.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.wx11(), RangeEquals(f32x4(5.0f, 2.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.wx1x(), RangeEquals(f32x4(5.0f, 2.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.wx1y(), RangeEquals(f32x4(5.0f, 2.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.wx1z(), RangeEquals(f32x4(5.0f, 2.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.wx1w(), RangeEquals(f32x4(5.0f, 2.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.wxx0(), RangeEquals(f32x4(5.0f, 2.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.wxx1(), RangeEquals(f32x4(5.0f, 2.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.wxxx(), RangeEquals(f32x4(5.0f, 2.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.wxxy(), RangeEquals(f32x4(5.0f, 2.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.wxxz(), RangeEquals(f32x4(5.0f, 2.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.wxxw(), RangeEquals(f32x4(5.0f, 2.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.wxy0(), RangeEquals(f32x4(5.0f, 2.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.wxy1(), RangeEquals(f32x4(5.0f, 2.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.wxyx(), RangeEquals(f32x4(5.0f, 2.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.wxyy(), RangeEquals(f32x4(5.0f, 2.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.wxyz(), RangeEquals(f32x4(5.0f, 2.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.wxyw(), RangeEquals(f32x4(5.0f, 2.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.wxz0(), RangeEquals(f32x4(5.0f, 2.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.wxz1(), RangeEquals(f32x4(5.0f, 2.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.wxzx(), RangeEquals(f32x4(5.0f, 2.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.wxzy(), RangeEquals(f32x4(5.0f, 2.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.wxzz(), RangeEquals(f32x4(5.0f, 2.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.wxzw(), RangeEquals(f32x4(5.0f, 2.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.wxw0(), RangeEquals(f32x4(5.0f, 2.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.wxw1(), RangeEquals(f32x4(5.0f, 2.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.wxwx(), RangeEquals(f32x4(5.0f, 2.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.wxwy(), RangeEquals(f32x4(5.0f, 2.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.wxwz(), RangeEquals(f32x4(5.0f, 2.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.wxww(), RangeEquals(f32x4(5.0f, 2.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.wy00(), RangeEquals(f32x4(5.0f, 3.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.wy01(), RangeEquals(f32x4(5.0f, 3.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.wy0x(), RangeEquals(f32x4(5.0f, 3.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.wy0y(), RangeEquals(f32x4(5.0f, 3.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.wy0z(), RangeEquals(f32x4(5.0f, 3.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.wy0w(), RangeEquals(f32x4(5.0f, 3.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.wy10(), RangeEquals(f32x4(5.0f, 3.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.wy11(), RangeEquals(f32x4(5.0f, 3.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.wy1x(), RangeEquals(f32x4(5.0f, 3.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.wy1y(), RangeEquals(f32x4(5.0f, 3.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.wy1z(), RangeEquals(f32x4(5.0f, 3.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.wy1w(), RangeEquals(f32x4(5.0f, 3.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.wyx0(), RangeEquals(f32x4(5.0f, 3.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.wyx1(), RangeEquals(f32x4(5.0f, 3.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.wyxx(), RangeEquals(f32x4(5.0f, 3.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.wyxy(), RangeEquals(f32x4(5.0f, 3.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.wyxz(), RangeEquals(f32x4(5.0f, 3.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.wyxw(), RangeEquals(f32x4(5.0f, 3.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.wyy0(), RangeEquals(f32x4(5.0f, 3.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.wyy1(), RangeEquals(f32x4(5.0f, 3.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.wyyx(), RangeEquals(f32x4(5.0f, 3.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.wyyy(), RangeEquals(f32x4(5.0f, 3.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.wyyz(), RangeEquals(f32x4(5.0f, 3.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.wyyw(), RangeEquals(f32x4(5.0f, 3.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.wyz0(), RangeEquals(f32x4(5.0f, 3.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.wyz1(), RangeEquals(f32x4(5.0f, 3.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.wyzx(), RangeEquals(f32x4(5.0f, 3.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.wyzy(), RangeEquals(f32x4(5.0f, 3.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.wyzz(), RangeEquals(f32x4(5.0f, 3.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.wyzw(), RangeEquals(f32x4(5.0f, 3.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.wyw0(), RangeEquals(f32x4(5.0f, 3.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.wyw1(), RangeEquals(f32x4(5.0f, 3.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.wywx(), RangeEquals(f32x4(5.0f, 3.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.wywy(), RangeEquals(f32x4(5.0f, 3.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.wywz(), RangeEquals(f32x4(5.0f, 3.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.wyww(), RangeEquals(f32x4(5.0f, 3.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.wz00(), RangeEquals(f32x4(5.0f, 4.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.wz01(), RangeEquals(f32x4(5.0f, 4.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.wz0x(), RangeEquals(f32x4(5.0f, 4.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.wz0y(), RangeEquals(f32x4(5.0f, 4.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.wz0z(), RangeEquals(f32x4(5.0f, 4.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.wz0w(), RangeEquals(f32x4(5.0f, 4.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.wz10(), RangeEquals(f32x4(5.0f, 4.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.wz11(), RangeEquals(f32x4(5.0f, 4.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.wz1x(), RangeEquals(f32x4(5.0f, 4.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.wz1y(), RangeEquals(f32x4(5.0f, 4.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.wz1z(), RangeEquals(f32x4(5.0f, 4.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.wz1w(), RangeEquals(f32x4(5.0f, 4.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.wzx0(), RangeEquals(f32x4(5.0f, 4.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.wzx1(), RangeEquals(f32x4(5.0f, 4.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.wzxx(), RangeEquals(f32x4(5.0f, 4.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.wzxy(), RangeEquals(f32x4(5.0f, 4.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.wzxz(), RangeEquals(f32x4(5.0f, 4.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.wzxw(), RangeEquals(f32x4(5.0f, 4.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.wzy0(), RangeEquals(f32x4(5.0f, 4.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.wzy1(), RangeEquals(f32x4(5.0f, 4.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.wzyx(), RangeEquals(f32x4(5.0f, 4.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.wzyy(), RangeEquals(f32x4(5.0f, 4.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.wzyz(), RangeEquals(f32x4(5.0f, 4.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.wzyw(), RangeEquals(f32x4(5.0f, 4.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.wzz0(), RangeEquals(f32x4(5.0f, 4.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.wzz1(), RangeEquals(f32x4(5.0f, 4.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.wzzx(), RangeEquals(f32x4(5.0f, 4.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.wzzy(), RangeEquals(f32x4(5.0f, 4.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.wzzz(), RangeEquals(f32x4(5.0f, 4.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.wzzw(), RangeEquals(f32x4(5.0f, 4.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.wzw0(), RangeEquals(f32x4(5.0f, 4.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.wzw1(), RangeEquals(f32x4(5.0f, 4.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.wzwx(), RangeEquals(f32x4(5.0f, 4.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.wzwy(), RangeEquals(f32x4(5.0f, 4.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.wzwz(), RangeEquals(f32x4(5.0f, 4.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.wzww(), RangeEquals(f32x4(5.0f, 4.0f, 5.0f, 5.0f)));
    REQUIRE_THAT(tmp.ww00(), RangeEquals(f32x4(5.0f, 5.0f, 0.0f, 0.0f)));
    REQUIRE_THAT(tmp.ww01(), RangeEquals(f32x4(5.0f, 5.0f, 0.0f, 1.0f)));
    REQUIRE_THAT(tmp.ww0x(), RangeEquals(f32x4(5.0f, 5.0f, 0.0f, 2.0f)));
    REQUIRE_THAT(tmp.ww0y(), RangeEquals(f32x4(5.0f, 5.0f, 0.0f, 3.0f)));
    REQUIRE_THAT(tmp.ww0z(), RangeEquals(f32x4(5.0f, 5.0f, 0.0f, 4.0f)));
    REQUIRE_THAT(tmp.ww0w(), RangeEquals(f32x4(5.0f, 5.0f, 0.0f, 5.0f)));
    REQUIRE_THAT(tmp.ww10(), RangeEquals(f32x4(5.0f, 5.0f, 1.0f, 0.0f)));
    REQUIRE_THAT(tmp.ww11(), RangeEquals(f32x4(5.0f, 5.0f, 1.0f, 1.0f)));
    REQUIRE_THAT(tmp.ww1x(), RangeEquals(f32x4(5.0f, 5.0f, 1.0f, 2.0f)));
    REQUIRE_THAT(tmp.ww1y(), RangeEquals(f32x4(5.0f, 5.0f, 1.0f, 3.0f)));
    REQUIRE_THAT(tmp.ww1z(), RangeEquals(f32x4(5.0f, 5.0f, 1.0f, 4.0f)));
    REQUIRE_THAT(tmp.ww1w(), RangeEquals(f32x4(5.0f, 5.0f, 1.0f, 5.0f)));
    REQUIRE_THAT(tmp.wwx0(), RangeEquals(f32x4(5.0f, 5.0f, 2.0f, 0.0f)));
    REQUIRE_THAT(tmp.wwx1(), RangeEquals(f32x4(5.0f, 5.0f, 2.0f, 1.0f)));
    REQUIRE_THAT(tmp.wwxx(), RangeEquals(f32x4(5.0f, 5.0f, 2.0f, 2.0f)));
    REQUIRE_THAT(tmp.wwxy(), RangeEquals(f32x4(5.0f, 5.0f, 2.0f, 3.0f)));
    REQUIRE_THAT(tmp.wwxz(), RangeEquals(f32x4(5.0f, 5.0f, 2.0f, 4.0f)));
    REQUIRE_THAT(tmp.wwxw(), RangeEquals(f32x4(5.0f, 5.0f, 2.0f, 5.0f)));
    REQUIRE_THAT(tmp.wwy0(), RangeEquals(f32x4(5.0f, 5.0f, 3.0f, 0.0f)));
    REQUIRE_THAT(tmp.wwy1(), RangeEquals(f32x4(5.0f, 5.0f, 3.0f, 1.0f)));
    REQUIRE_THAT(tmp.wwyx(), RangeEquals(f32x4(5.0f, 5.0f, 3.0f, 2.0f)));
    REQUIRE_THAT(tmp.wwyy(), RangeEquals(f32x4(5.0f, 5.0f, 3.0f, 3.0f)));
    REQUIRE_THAT(tmp.wwyz(), RangeEquals(f32x4(5.0f, 5.0f, 3.0f, 4.0f)));
    REQUIRE_THAT(tmp.wwyw(), RangeEquals(f32x4(5.0f, 5.0f, 3.0f, 5.0f)));
    REQUIRE_THAT(tmp.wwz0(), RangeEquals(f32x4(5.0f, 5.0f, 4.0f, 0.0f)));
    REQUIRE_THAT(tmp.wwz1(), RangeEquals(f32x4(5.0f, 5.0f, 4.0f, 1.0f)));
    REQUIRE_THAT(tmp.wwzx(), RangeEquals(f32x4(5.0f, 5.0f, 4.0f, 2.0f)));
    REQUIRE_THAT(tmp.wwzy(), RangeEquals(f32x4(5.0f, 5.0f, 4.0f, 3.0f)));
    REQUIRE_THAT(tmp.wwzz(), RangeEquals(f32x4(5.0f, 5.0f, 4.0f, 4.0f)));
    REQUIRE_THAT(tmp.wwzw(), RangeEquals(f32x4(5.0f, 5.0f, 4.0f, 5.0f)));
    REQUIRE_THAT(tmp.www0(), RangeEquals(f32x4(5.0f, 5.0f, 5.0f, 0.0f)));
    REQUIRE_THAT(tmp.www1(), RangeEquals(f32x4(5.0f, 5.0f, 5.0f, 1.0f)));
    REQUIRE_THAT(tmp.wwwx(), RangeEquals(f32x4(5.0f, 5.0f, 5.0f, 2.0f)));
    REQUIRE_THAT(tmp.wwwy(), RangeEquals(f32x4(5.0f, 5.0f, 5.0f, 3.0f)));
    REQUIRE_THAT(tmp.wwwz(), RangeEquals(f32x4(5.0f, 5.0f, 5.0f, 4.0f)));
    REQUIRE_THAT(tmp.wwww(), RangeEquals(f32x4(5.0f, 5.0f, 5.0f, 5.0f)));
}

}
